--- 2	2006-12-05 17:07:24.000000000 +0100
+++ LPARSER.C	2006-12-05 16:58:35.000000000 +0100
@@ -13,16 +13,17 @@
 
 #include <stdio.h>
 #include <float.h>
 #include <stdlib.h>
 #include <string.h>
 #include <stdarg.h>
 #include <math.h>
 #include <malloc.h>
+#include <time.h>
 
 
 /* Basic types ------------------------------------------------------------ */
 
 
 /* Simple types */
 #define u8               unsigned char
 #define u16              unsigned short int
@@ -1981,18 +1982,18 @@ Get_value(u32 *j)
 
     if (last_recur)
         r *= fraction;
 
     return r;
 }
 
 
-static
-L_init(void)
+static 
+void L_init(void)
 {                                           /* Process a ls file and setup */
     FILE                   *f;
     char                    name[max_file], temp[rule_s];
     boolean                 found;
     s16                     i, j;
 
  /* Init mem */
     object_s = (char *) malloc(max_string);
@@ -2146,17 +2147,17 @@ L_init(void)
             mark[i] = FALSE;
 
         Message("Rule           : %s\n", rule[i]);
     }
 }
 
 
 static
-L_mutate(void)
+void L_mutate(void)
 {                                           /* Apply mutations to the rules */
     s16                     i, j, k, rules, ii, max = 1000;
     char                    T, R, S[10] = "";
     char                    rulet[100] = "";
 
     for (i = 0; i < num; i++) {
         if (rule[i][0] == '+')
             break;
@@ -2342,17 +2343,17 @@ L_mutate(void)
         }
         break;
 
     }
 }
 
 
 static
-L_system(void)
+void L_system(void)
 {                                           /* Expand l-system into production
                                              * string. Object_s is read with
                                              * the k counter and the next
                                              * generation is build up in otemp
                                              * with the ot counter. */
 
     u32                     k, st, s, ss, max = max_string - 10L;
     char                   *ot;
@@ -2447,17 +2448,17 @@ L_save(void)
     fprintf(f, "@\n");
 
     fclose(f);
 }
 
 
 
 static
-L_draw(void)
+void L_draw(void)
 {                                           /* Process a production string and
                                              * generate form */
     vector                  pos, end, v, fow, upp, lef;
     u32                     i, max = strlen(object_s);
     r32                     r, a, thick_l, ang_l, dis_l, dis2_l, trope_l;
     s16                     vcount, pcount, j;
     char                    temp[max_file], next;
     boolean                 found, poly_on = FALSE;
@@ -3042,17 +3043,17 @@ Help(void)
     Message("%s \t-g        add ground plane\n", "ls");
     Message("%s \t-L [num]  set amount for ~ command\n", "ls");
     Message("%s \t-P [num]  set amount for t command\n", "ls");
 
     Message("%s \t-p [num]  limit polygons to [num]\n", "limit");
 }
 
 
-void
+int
 main(int argc, char *argv[])
 {
     char                    temp[max_file];
     boolean                 found;
     s16                     tim, i;
 
  /* Store the pointers to the comline */
     s_argc = argc;
